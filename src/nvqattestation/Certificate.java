/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nvqattestation;

import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author SD2023
 */
public class Certificate extends javax.swing.JFrame {

    /**
     * Creates new form Certificate
     */
    
    public ResultSet rs;
    public PreparedStatement pst;
    DBConnection database = new DBConnection();
    public String currentCSN;
    public String currentID;
    
    public Certificate() {
        database.dbConnect();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAddCertificate = new javax.swing.JButton();
        btnUpdateCertificate = new javax.swing.JButton();
        btnClearCertificate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCertificate = new javax.swing.JTable();
        date = new com.toedter.calendar.JDateChooser();
        nicDropdown = new javax.swing.JComboBox<>();
        btnDeleteCertificate = new javax.swing.JButton();
        txtCsn = new javax.swing.JFormattedTextField();
        txtBsn = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setText("STUDENT CERTIFICATE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        jLabel2.setText("C H E C K   T H E   S T U D E N T    N V Q   C E R T I F I C A T E");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 84, 84));
        jButton1.setForeground(new java.awt.Color(255, 84, 84));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nvqattestation/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 30, 30));

        jLabel3.setText("Certificate Serial Number");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel4.setText("Student NIC Number");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel5.setText("Back Serial Number");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        btnAddCertificate.setBackground(new java.awt.Color(25, 135, 84));
        btnAddCertificate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddCertificate.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCertificate.setText("ADD ");
        btnAddCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCertificateActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddCertificate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 480, 120, 30));

        btnUpdateCertificate.setBackground(new java.awt.Color(13, 110, 253));
        btnUpdateCertificate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateCertificate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateCertificate.setText("UPDATE");
        btnUpdateCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCertificateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdateCertificate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 120, 30));

        btnClearCertificate.setBackground(new java.awt.Color(13, 202, 240));
        btnClearCertificate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearCertificate.setForeground(new java.awt.Color(255, 255, 255));
        btnClearCertificate.setText("CLEAR");
        btnClearCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCertificateActionPerformed(evt);
            }
        });
        jPanel1.add(btnClearCertificate, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 480, 120, 30));

        jLabel6.setText("Effective Date");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        tblCertificate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Certificate Serial Number", "Student NIC", "Back Serial Number", "Effective Date"
            }
        ));
        tblCertificate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCertificateMouseClicked(evt);
            }
        });
        tblCertificate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCertificateKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCertificate);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 630, 310));

        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateKeyPressed(evt);
            }
        });
        jPanel1.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 230, 30));

        nicDropdown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nicDropdownKeyPressed(evt);
            }
        });
        jPanel1.add(nicDropdown, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 230, 30));

        btnDeleteCertificate.setBackground(new java.awt.Color(220, 53, 69));
        btnDeleteCertificate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteCertificate.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteCertificate.setText("DELETE");
        btnDeleteCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCertificateActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteCertificate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 480, 120, 30));

        try {
            txtCsn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCsnActionPerformed(evt);
            }
        });
        txtCsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCsnKeyPressed(evt);
            }
        });
        jPanel1.add(txtCsn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 230, 30));

        try {
            txtBsn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBsnKeyPressed(evt);
            }
        });
        jPanel1.add(txtBsn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 230, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nvqattestation/ETI+Website+Graphics.png"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, -20, 1240, 860));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCertificateActionPerformed
        
        insertCertificateData();
      
                
    }//GEN-LAST:event_btnAddCertificateActionPerformed

    private void btnUpdateCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCertificateActionPerformed
        String csn = txtCsn.getText();
        String nic = nicDropdown.getSelectedItem().toString();
        String bsn = txtBsn.getText();
        Instant instant = date.getDate().toInstant();
        LocalDate date = instant.atZone(ZoneId.systemDefault()).toLocalDate();
        String purchaseDate = date.toString();
        
        StCertificate stCertificate = new StCertificate(csn, nic, bsn, purchaseDate);
        
        if(tblCertificate.getSelectedRow() >= 0){
            try {
                String UpdateQuery = "UPDATE `student_certificate` SET `csn`=?,`nic`=?,`bsn`=?,`date`=? WHERE `csn`=? AND `nic`=?";
                pst = database.con.prepareStatement(UpdateQuery);
                pst.setString(1,stCertificate.getCsn());
                pst.setString(2,stCertificate.getNic());
                pst.setString(3,stCertificate.getBsn());
                pst.setString(4,stCertificate.getDate());
                pst.setString(5,currentCSN);
                pst.setString(6,currentID);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null,"Update Sucessfully");
                getTableData();
                clearText();
            } catch (SQLException ex) {
                Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnUpdateCertificateActionPerformed

    private void btnClearCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCertificateActionPerformed
       clearText();
    }//GEN-LAST:event_btnClearCertificateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        NvtiUI frame = new NvtiUI();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDeleteCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCertificateActionPerformed
        String csn = txtCsn.getText();
        String nic = nicDropdown.getSelectedItem().toString();
        
        int confirmAlert = JOptionPane.showConfirmDialog(null, "Do you want to proceed?", "Select an Option...",
				JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
        
        if(confirmAlert == 0){
            try {
                String DeleteData="DELETE FROM `student_certificate` WHERE `csn`=? AND `nic`=?";
                pst = database.con.prepareStatement(DeleteData);
                pst.setString(1,csn);
                pst.setString(2,nic);
                JOptionPane.showMessageDialog(null,"Deleted Sucessfully","DELETE",JOptionPane.WARNING_MESSAGE);
                pst.executeUpdate();
                getTableData();
                clearText();
                txtCsn.requestFocus();
            } catch (SQLException ex) {
                Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btnDeleteCertificateActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setDropDownData();
        getTableData();
        txtCsn.requestFocus();
        btnUpdateCertificate.setEnabled(false);
        btnDeleteCertificate.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void txtCsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCsnActionPerformed

    private void tblCertificateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCertificateKeyPressed
       
    }//GEN-LAST:event_tblCertificateKeyPressed

    private void tblCertificateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCertificateMouseClicked
        try {
            TableModel certificateModel = tblCertificate.getModel();
            int rowNumber = tblCertificate.getSelectedRow();
            txtCsn.setText(certificateModel.getValueAt(rowNumber,0).toString());
            nicDropdown.setSelectedItem(certificateModel.getValueAt(rowNumber, 1).toString());
            txtBsn.setText(certificateModel.getValueAt(rowNumber, 2).toString());
            String dateValue = certificateModel.getValueAt(rowNumber, 3).toString();
            java.util.Date newDate = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
            date.setDate(newDate);
            
            btnAddCertificate.setEnabled(false);
            currentCSN = txtCsn.getText();
            currentID = nicDropdown.getSelectedItem().toString();
            btnUpdateCertificate.setEnabled(true);
            btnDeleteCertificate.setEnabled(true);
            txtCsn.requestFocus();
        } catch (ParseException ex) {
            Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblCertificateMouseClicked

    private void txtCsnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCsnKeyPressed
       if(evt.getKeyChar()==KeyEvent.VK_ENTER){
           nicDropdown.requestFocus();
       }
    }//GEN-LAST:event_txtCsnKeyPressed

    private void nicDropdownKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicDropdownKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
           txtBsn.requestFocus();
       }
    }//GEN-LAST:event_nicDropdownKeyPressed

    private void dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyPressed
         if(evt.getKeyChar()==KeyEvent.VK_ENTER){
           insertCertificateData();
         }
    }//GEN-LAST:event_dateKeyPressed

    private void txtBsnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBsnKeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
           date.requestFocusInWindow();
       }
    }//GEN-LAST:event_txtBsnKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Certificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Certificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Certificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Certificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Certificate().setVisible(true);
            }
        });
    }
    
    void clearText(){
        txtCsn.setText("");
        txtBsn.setText("");
        date.setDate(null);
        btnAddCertificate.setEnabled(true);
        btnUpdateCertificate.setEnabled(false);
        btnDeleteCertificate.setEnabled(false);
    }
    
    boolean validation(){
        
            if(txtCsn.getText().isEmpty() || txtBsn.getText().isEmpty() || date.getDate()==null){
                txtCsn.requestFocus();
                JOptionPane.showMessageDialog(null,"All Fields Are Required");
                return false;
            }
//            if(txtCsn.getValue().toString().length() < 6){
//                txtCsn.requestFocus();
//                JOptionPane.showMessageDialog(null,"Minimum need 6 Characters for Certificate ID");
//                return false;
//            }
        try {
            String checkIdAndCsn = "SELECT `csn`, `nic` FROM `student_certificate` WHERE `csn`=? AND `nic`=?";
            pst = database.con.prepareStatement(checkIdAndCsn);
            pst.setString(1,txtCsn.getText());
            pst.setString(2,nicDropdown.getSelectedItem().toString());
            rs = pst.executeQuery();
            
            if(rs.next()){
                JOptionPane.showMessageDialog(null,"Certificate Serial Number and NIC No Already Used !");
                txtCsn.requestFocus();
                clearText();
                return false;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }
    
    void setDropDownData(){
        try {
            String getId="SELECT `nic` FROM `students`";
            pst = database.con.prepareStatement(getId);
            rs = pst.executeQuery();
            while(rs.next()){
                nicDropdown.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void getTableData(){
        try {
            DefaultTableModel certificateTblModel = (DefaultTableModel) tblCertificate.getModel();
            String getAllData = "SELECT * FROM `student_certificate`";
            pst = database.con.prepareStatement(getAllData);
            rs = pst.executeQuery();
            certificateTblModel.setRowCount(0);
            while(rs.next()){
                String csn = rs.getString(1);
                String nic = rs.getString(2);
                String bsn = rs.getString(3);
                String date = rs.getString(4);
                
                String[] data = {csn,nic,bsn,date};
                certificateTblModel.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void insertCertificateData(){
        if(validation()){
                String csn = txtCsn.getText();
                String nic = nicDropdown.getSelectedItem().toString();
                String bsn = txtBsn.getText();

                Instant instant = date.getDate().toInstant();
                LocalDate date = instant.atZone(ZoneId.systemDefault()).toLocalDate();
                String purchaseDate = date.toString();
        
                StCertificate stCertificate = new StCertificate(csn, nic, bsn, purchaseDate);
                try {
                    String InsertData="INSERT INTO `student_certificate`(`csn`, `nic`, `bsn`, `date`) VALUES (?,?,?,?)";
                    pst = database.con.prepareStatement(InsertData);
                    
                    pst.setString(1,stCertificate.getCsn());
                    pst.setString(2,stCertificate.getNic());
                    pst.setString(3,stCertificate.getBsn());
                    pst.setString(4,stCertificate.getDate());
                    
                    pst.executeUpdate();
                    
                    JOptionPane.showMessageDialog(null, "Certificate Data Add Sucessfully");
                    
                    getTableData();
                    
                    clearText();
                } catch (SQLException ex) {
                    Logger.getLogger(Certificate.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCertificate;
    private javax.swing.JButton btnClearCertificate;
    private javax.swing.JButton btnDeleteCertificate;
    private javax.swing.JButton btnUpdateCertificate;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nicDropdown;
    private javax.swing.JTable tblCertificate;
    private javax.swing.JFormattedTextField txtBsn;
    private javax.swing.JFormattedTextField txtCsn;
    // End of variables declaration//GEN-END:variables
}
